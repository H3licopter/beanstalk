[nav(1) bg(100, 220, 0, 0.06): [link("../"): &#127793;]]

[header center: [title 1: ERROR HANDLING]]
[main:

Any function that can return an error as one of it's values.

The ? operator is used to check if one of the values in a tuple is an error. If it is, the error can then be handled in a new scope.

## Using the ? operator
These operators allow for very concise error handling and makes it easy to see where errors are being handled in the code, as well as providing a way to avoid opening a new scope for every error check.

    [code:
        -- Always returns a string even if an error is thrown by getNetworkRequest()
        -- The program will print the error and continue with "example.com" as the value instead of the zero value and an error.
        
        getURL :: () -> string {
            return getNetworkRequest() ? {
                io "Network Request Error: " + error
                return "example.com"
            }
        }

        -- Returns a string or an error
        getURL :: () -> string? {
            return getNetworkRequest()
        }
    ]

]

[footer: [pad(2, 0, 0, 0) center: 
    ### &#127793;
]