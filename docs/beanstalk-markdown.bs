#title "Beanstalk Markdown"
#date "2024-2-4"
---

Beanstalk uses it's own flavour of markdown. Instead of writing any raw HTML, you can use the Beanstalk scene syntax to create a scene. Scenes are parsed and rendered into HTML or XML.

The first scene you create will become the default export of the file if it isn't named. 
You create a parent scene by using a triple dash and starting the scene on a newline.

You can specify a name for the scene by naming it on the same line as the triple dash. This will allow you to export multiple scenes into other files.

To close the parent scene, you can use the triple dash again on a newline.

{raw:
    ---
    # A Heading

    Some text that has a [link](www.example.com) inside it.

    { variable_from_the_code }

    The main difference is curly brackets {red: *cannot*} be used without an escape character and additional styling and id tags syntaxes are supported, links use the # prefix too.

    You can also use the #component directive, which will create a scene for the remainder of the file. This will automatically make the scene available as a component globally across the rest of the project, so explicit imports are not required.

    #component "component_name"

    # component
    { blue: can now use "component_name" as a scene property across the project }

    The scene will be automatically closed if it reaches the end of the file. So files that are entirely the content of a scene don't have to be indented.
}
