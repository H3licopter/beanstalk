#title "Beanstalk Markdown"
#date "2024-2-4"
#page {:

Beanstalk uses it's own flavour of markdown. Instead of writing any raw HTML, you can use the Beanstalk scene syntax to create a scene. Scenes are parsed and rendered into HTML.

To create a default export of the file that the compiler will render into an HTML if the file is part of the "pages" directory, 
create a Scene after the "page" decorator. You can set the title of the page on the page property. 
If the file is not part of the pages directory, you can use #content or #component to make importing the scene into other files easy.

{raw:
    #page {:

    # A Heading

    Some text that has a [link](www.example.com) inside it.

    { variable_from_the_code }

    The main difference is curly brackets {red: *cannot*} be used without an escape character and additional styling and id tags syntaxes are supported, links use the # prefix too.

    You can also use the #component directive, which will create a scene for the remainder of the file. This will automatically make the scene available as a component globally across the rest of the project, so explicit imports are not required.

    #component "component_name"

    # component
    { blue: can now use "component_name" as a scene property across the project }

    The scene will be automatically closed if it reaches the end of the file. So files that are entirely the content of a scene don't have to be indented.
}
